export const quizzes = [
  {
    id: 1,
    title: 'Questões sobre JDBC, java.sql, javax.sql, drivers JDBC',
    questions: [
      {
        id: 1,
        prefix: '1)',
        question: 'O que é JDBC?',
        options: [
          { id: 1, prefix: 'A', answer: 'Uma linguagem de programação' },
          { id: 2, prefix: 'B', answer: 'Uma API para conectar Java a bancos de dados relacionais' },
          { id: 3, prefix: 'C', answer: 'Um sistema operacional' },
          { id: 4, prefix: 'D', answer: 'Um servidor web' },
          { id: 5, prefix: 'E', answer: 'Um framework para desenvolvimento web' },
        ],
        answer: 'B',
        justification: 'JDBC (Java Database Connectivity) é uma API que permite que programas Java se conectem e interajam com bancos de dados relacionais.',
      },
      {
        id: 2,
        prefix: '2)',
        question: 'Qual pacote contém as classes e interfaces principais do JDBC?',
        options: [
          { id: 1, prefix: 'A', answer: 'java.util' },
          { id: 2, prefix: 'B', answer: 'java.io' },
          { id: 3, prefix: 'C', answer: 'java.sql' },
          { id: 4, prefix: 'D', answer: 'javax.swing' },
          { id: 5, prefix: 'E', answer: 'javax.net' },
        ],
        answer: 'C',
        justification: 'O pacote java.sql contém as classes e interfaces principais do JDBC, como Connection, Statement, ResultSet, etc.',
      },
      {
        id: 3,
        prefix: '3)',
        question: 'Qual método da classe DriverManager é usado para estabelecer uma conexão com um banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'connect()' },
          { id: 2, prefix: 'B', answer: 'getConnection()' },
          { id: 3, prefix: 'C', answer: 'createConnection()' },
          { id: 4, prefix: 'D', answer: 'openConnection()' },
          { id: 5, prefix: 'E', answer: 'startConnection()' },
        ],
        answer: 'B',
        justification: 'O método getConnection() da classe DriverManager é usado para estabelecer uma conexão com um banco de dados usando uma URL de conexão.',
      },
      {
        id: 4,
        prefix: '4)',
        question: 'Qual interface é usada para executar instruções SQL que retornam um conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'PreparedStatement' },
          { id: 2, prefix: 'B', answer: 'SQLExecution' },
          { id: 3, prefix: 'C', answer: 'Statement' },
          { id: 4, prefix: 'D', answer: 'DriveManager' },
          { id: 5, prefix: 'E', answer: 'Connection' },
        ],
        answer: 'C',
        justification: 'A interface Statement é usada para executar instruções SQL que retornam um objeto ResultSet.',
      },
      {
        id: 5,
        prefix: '5)',
        question: 'Qual é a principal diferença entre os drivers JDBC Tipo 1 e Tipo 4?',
        options: [
          { id: 1, prefix: 'A', answer: 'Tipo 1 é mais rápido que Tipo 4' },
          { id: 2, prefix: 'B', answer: 'Tipo 1 usa uma ponte ODBC, enquanto Tipo 4 se conecta diretamente ao banco de dados' },
          { id: 3, prefix: 'C', answer: 'Tipo 1 é específico para bancos de dados Oracle, enquanto Tipo 4 é para MySQL' },
          { id: 4, prefix: 'D', answer: 'Tipo 1 é usado apenas para leitura, enquanto Tipo 4 é usado para escrita' },
          { id: 5, prefix: 'E', answer: 'Tipo 1 é mais seguro que Tipo 4' },
        ],
        answer: 'B',
        justification: 'Drivers Tipo 1 usam uma ponte ODBC para se conectar ao banco de dados, enquanto drivers Tipo 4 se conectam diretamente ao banco de dados sem intermediários.',
      },
      {
        id: 6,
        prefix: '6)',
        question: 'Qual interface fornece informações sobre os tipos e propriedades das colunas em um objeto ResultSet?',
        options: [
          { id: 1, prefix: 'A', answer: 'ResultSetMetaData' },
          { id: 2, prefix: 'B', answer: 'ResultSetInfo' },
          { id: 3, prefix: 'C', answer: 'ResultSetDetails' },
          { id: 4, prefix: 'D', answer: 'ResultSetProperties' },
          { id: 5, prefix: 'E', answer: 'ResultSetColumns' },
        ],
        answer: 'A',
        justification: 'A interface ResultSetMetaData fornece informações sobre os tipos e propriedades das colunas em um objeto ResultSet.',
      },
      {
        id: 7,
        prefix: '7)',
        question: 'Qual exceção é lançada para indicar um erro de acesso ao banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'SQLException' },
          { id: 2, prefix: 'B', answer: 'IOException' },
          { id: 3, prefix: 'C', answer: 'DatabaseException' },
          { id: 4, prefix: 'D', answer: 'SQLAccessException' },
          { id: 5, prefix: 'E', answer: 'DataAccessException' },
        ],
        answer: 'A',
        justification: 'A exceção SQLException é lançada para indicar um erro de acesso ao banco de dados ou outros erros relacionados.',
      },
      {
        id: 8,
        prefix: '8)',
        question: 'Qual método da interface Connection é usado para iniciar uma transação?',
        options: [
          { id: 1, prefix: 'A', answer: 'beginTransaction()' },
          { id: 2, prefix: 'B', answer: 'startTransaction()' },
          { id: 3, prefix: 'C', answer: 'setAutoCommit(false)' },
          { id: 4, prefix: 'D', answer: 'commit()' },
          { id: 5, prefix: 'E', answer: 'rollback()' },
        ],
        answer: 'C',
        justification: 'O método setAutoCommit(false) é usado para desativar o modo de confirmação automática, iniciando assim uma transação.',
      },
      {
        id: 9,
        prefix: '9)',
        question: 'Qual método da interface ResultSet é usado para mover o cursor para a próxima linha do conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'next()' },
          { id: 2, prefix: 'B', answer: 'previous()' },
          { id: 3, prefix: 'C', answer: 'first()' },
          { id: 4, prefix: 'D', answer: 'last()' },
          { id: 5, prefix: 'E', answer: 'move()' },
        ],
        answer: 'A',
        justification: 'O método next() move o cursor para a próxima linha do conjunto de resultados.',
      },
      {
        id: 10,
        prefix: '10)',
        question: 'Qual método da interface ResultSetMetaData é usado para obter o número de colunas em um conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'getColumnCount()' },
          { id: 2, prefix: 'B', answer: 'getColumnNumber()' },
          { id: 3, prefix: 'C', answer: 'getColumnSize()' },
          { id: 4, prefix: 'D', answer: 'getColumnLength()' },
          { id: 5, prefix: 'E', answer: 'getColumnTotal()' },
        ],
        answer: 'A',
        justification: 'O método getColumnCount() retorna o número de colunas em um conjunto de resultados.',
      },
    ],
  },
  {
    id: 2,
    title: 'Questões sobre JDBC, Connection, Statement, PreparedStatement, ResultSet, tipos de drivers',
    questions: [
      {
        id: 1,
        prefix: '1)',
        question: 'Qual pacote contém a interface Connection?',
        options: [
          { id: 1, prefix: 'A', answer: 'javax.sql' },
          { id: 2, prefix: 'B', answer: 'java.sql' },
          { id: 3, prefix: 'C', answer: 'java.jdbc' },
          { id: 4, prefix: 'D', answer: 'javax.jdbc' },
          { id: 5, prefix: 'E', answer: 'java.connection' },
        ],
        answer: 'B',
        justification: 'A interface Connection faz parte do pacote java.sql.',
      },
      {
        id: 2,
        prefix: '2)',
        question: 'Qual método da interface PreparedStatement é usado para executar uma consulta SQL que retorna um ResultSet?',
        options: [
          { id: 1, prefix: 'A', answer: 'executeUpdate()' },
          { id: 2, prefix: 'B', answer: 'executeQuery()' },
          { id: 3, prefix: 'C', answer: 'execute()' },
          { id: 4, prefix: 'D', answer: 'executeBatch()' },
          { id: 5, prefix: 'E', answer: 'executeResult()' },
        ],
        answer: 'B',
        justification: 'O método executeQuery() é usado para executar consultas SQL que retornam um ResultSet.',
      },
      {
        id: 3,
        prefix: '3)',
        question: 'Qual tipo de driver JDBC é conhecido como driver de ponte JDBC-ODBC?',
        options: [
          { id: 1, prefix: 'A', answer: 'Tipo 1' },
          { id: 2, prefix: 'B', answer: 'Tipo 2' },
          { id: 3, prefix: 'C', answer: 'Tipo 3' },
          { id: 4, prefix: 'D', answer: 'Tipo 4' },
          { id: 5, prefix: 'E', answer: 'Tipo 5' },
        ],
        answer: 'A',
        justification: 'O driver Tipo 1 é conhecido como driver de ponte JDBC-ODBC.',
      },
      {
        id: 4,
        prefix: '4)',
        question: 'Qual interface é usada para executar instruções SQL estáticas e retornar os resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'PreparedStatement' },
          { id: 2, prefix: 'B', answer: 'CallableStatement' },
          { id: 3, prefix: 'C', answer: 'Statement' },
          { id: 4, prefix: 'D', answer: 'ResultSet' },
          { id: 5, prefix: 'E', answer: 'Connection' },
        ],
        answer: 'C',
        justification: 'A interface Statement é usada para executar instruções SQL estáticas e retornar os resultados.',
      },
      {
        id: 5,
        prefix: '5)',
        question: 'Qual método da interface Connection é usado para iniciar uma transação?',
        options: [
          { id: 1, prefix: 'A', answer: 'beginTransaction()' },
          { id: 2, prefix: 'B', answer: 'startTransaction()' },
          { id: 3, prefix: 'C', answer: 'setAutoCommit(false)' },
          { id: 4, prefix: 'D', answer: 'commit()' },
          { id: 5, prefix: 'E', answer: 'rollback()' },
        ],
        answer: 'C',
        justification: 'O método setAutoCommit(false) é usado para desativar o modo de confirmação automática, iniciando assim uma transação.',
      },
      {
        id: 6,
        prefix: '6)',
        question: 'Qual método da interface ResultSet é usado para mover o cursor para a próxima linha?',
        options: [
          { id: 1, prefix: 'A', answer: 'next()' },
          { id: 2, prefix: 'B', answer: 'previous()' },
          { id: 3, prefix: 'C', answer: 'first()' },
          { id: 4, prefix: 'D', answer: 'last()' },
          { id: 5, prefix: 'E', answer: 'move()' },
        ],
        answer: 'A',
        justification: 'O método next() é usado para mover o cursor para a próxima linha no ResultSet.',
      },
      {
        id: 7,
        prefix: '7)',
        question: 'Qual pacote contém a interface DataSource?',
        options: [
          { id: 1, prefix: 'A', answer: 'java.sql' },
          { id: 2, prefix: 'B', answer: 'javax.sql' },
          { id: 3, prefix: 'C', answer: 'java.jdbc' },
          { id: 4, prefix: 'D', answer: 'javax.jdbc' },
          { id: 5, prefix: 'E', answer: 'java.datasource' },
        ],
        answer: 'B',
        justification: 'A interface DataSource faz parte do pacote javax.sql.',
      },
      {
        id: 8,
        prefix: '8)',
        question: 'Qual tipo de driver JDBC é conhecido como driver nativo-protocolo?',
        options: [
          { id: 1, prefix: 'A', answer: 'Tipo 1' },
          { id: 2, prefix: 'B', answer: 'Tipo 2' },
          { id: 3, prefix: 'C', answer: 'Tipo 3' },
          { id: 4, prefix: 'D', answer: 'Tipo 4' },
          { id: 5, prefix: 'E', answer: 'Tipo 5' },
        ],
        answer: 'B',
        justification: 'O driver Tipo 2 é conhecido como driver nativo-protocolo.',
      },
      {
        id: 9,
        prefix: '9)',
        question: 'Qual método da interface Statement é usado para executar uma instrução SQL que não retorna um ResultSet?',
        options: [
          { id: 1, prefix: 'A', answer: 'executeQuery()' },
          { id: 2, prefix: 'B', answer: 'executeUpdate()' },
          { id: 3, prefix: 'C', answer: 'execute()' },
          { id: 4, prefix: 'D', answer: 'executeBatch()' },
          { id: 5, prefix: 'E', answer: 'executeResult()' },
        ],
        answer: 'B',
        justification: 'O método executeUpdate() é usado para executar instruções SQL que não retornam um ResultSet, como instruções INSERT, UPDATE ou DELETE.',
      },
      {
        id: 10,
        prefix: '10)',
        question: 'Qual interface é usada para chamar procedimentos armazenados no banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'PreparedStatement' },
          { id: 2, prefix: 'B', answer: 'CallableStatement' },
          { id: 3, prefix: 'C', answer: 'Statement' },
          { id: 4, prefix: 'D', answer: 'ResultSet' },
          { id: 5, prefix: 'E', answer: 'Connection' },
        ],
        answer: 'B',
        justification: 'A interface CallableStatement é usada para chamar procedimentos armazenados no banco de dados.',
      },
      {
        id: 11,
        prefix: '11)',
        question: 'O que é o classpath em Java?',
        options: [
          { id: 1, prefix: 'A', answer: 'Um caminho para arquivos de configuração' },
          { id: 2, prefix: 'B', answer: 'Um caminho para arquivos de imagem' },
          { id: 3, prefix: 'C', answer: 'Um caminho para arquivos de classe e bibliotecas' },
          { id: 4, prefix: 'D', answer: 'Um caminho para arquivos de texto' },
          { id: 5, prefix: 'E', answer: 'Um caminho para arquivos de áudio' },
        ],
        answer: 'C',
        justification: 'O classpath é usado para especificar a localização de arquivos de classe e bibliotecas que a JVM deve usar.',
      },
      {
        id: 12,
        prefix: '12)',
        question: 'O que é um arquivo JAR?',
        options: [
          { id: 1, prefix: 'A', answer: 'Um arquivo de texto' },
          { id: 2, prefix: 'B', answer: 'Um arquivo de imagem' },
          { id: 3, prefix: 'C', answer: 'Um arquivo compactado que contém classes Java e metadados' },
          { id: 4, prefix: 'D', answer: 'Um arquivo de áudio' },
          { id: 5, prefix: 'E', answer: 'Um arquivo de vídeo' },
        ],
        answer: 'C',
        justification: 'Um arquivo JAR (Java ARchive) é um arquivo compactado que pode conter classes Java, bibliotecas e outros recursos.',
      },
      {
        id: 13,
        prefix: '13)',
        question: 'Como você adiciona um arquivo JAR ao classpath no Eclipse?',
        options: [
          { id: 1, prefix: 'A', answer: 'Arrastando o arquivo JAR para a pasta src' },
          { id: 2, prefix: 'B', answer: 'Adicionando o arquivo JAR ao build path através das propriedades do projeto' },
          { id: 3, prefix: 'C', answer: 'Colocando o arquivo JAR na pasta bin' },
          { id: 4, prefix: 'D', answer: 'Renomeando o arquivo JAR para .class' },
          { id: 5, prefix: 'E', answer: 'Colocando o arquivo JAR na pasta lib' },
        ],
        answer: 'B',
        justification: 'No Eclipse, você pode adicionar um arquivo JAR ao classpath indo até as propriedades do projeto e adicionando-o ao build path.',
      },
      {
        id: 14,
        prefix: '14)',
        question: 'Qual erro pode ocorrer se o classpath não estiver definido corretamente?',
        options: [
          { id: 1, prefix: 'A', answer: 'FileNotFoundException' },
          { id: 2, prefix: 'B', answer: 'NullPointerException' },
          { id: 3, prefix: 'C', answer: 'ClassNotFoundException' },
          { id: 4, prefix: 'D', answer: 'IOException' },
          { id: 5, prefix: 'E', answer: 'ArrayIndexOutOfBoundsException' },
        ],
        answer: 'C',
        justification: 'Se o classpath não estiver definido corretamente, a JVM não conseguirá encontrar as classes necessárias, resultando em um ClassNotFoundException.',
      },
      {
        id: 15,
        prefix: '15)',
        question: 'Qual é a função do arquivo MANIFEST.MF em um arquivo JAR?',
        options: [
          { id: 1, prefix: 'A', answer: 'Armazenar imagens' },
          { id: 2, prefix: 'B', answer: 'Armazenar arquivos de áudio' },
          { id: 3, prefix: 'C', answer: 'Armazenar metadados sobre o conteúdo do JAR' },
          { id: 4, prefix: 'D', answer: 'Armazenar código-fonte' },
          { id: 5, prefix: 'E', answer: 'Armazenar arquivos de vídeo' },
        ],
        answer: 'C',
        justification: 'O arquivo MANIFEST.MF dentro de um JAR contém metadados sobre o conteúdo do arquivo JAR, como informações sobre as classes e bibliotecas incluídas.',
      },
      {
        id: 16,
        prefix: '16)',
        question: 'Qual comando é usado para criar um arquivo JAR a partir de arquivos de classe?',
        options: [
          { id: 1, prefix: 'A', answer: 'javac' },
          { id: 2, prefix: 'B', answer: 'java' },
          { id: 3, prefix: 'C', answer: 'jar' },
          { id: 4, prefix: 'D', answer: 'javadoc' },
          { id: 5, prefix: 'E', answer: 'javap' },
        ],
        answer: 'C',
        justification: 'O comando jar é usado para criar, visualizar e manipular arquivos JAR.',
      },
      {
        id: 17,
        prefix: '17)',
        question: 'Qual das seguintes opções NÃO é uma maneira de definir o classpath no Eclipse?',
        options: [
          { id: 1, prefix: 'A', answer: 'Usar a linha de comando' },
          { id: 2, prefix: 'B', answer: 'Usar as propriedades do projeto' },
          { id: 3, prefix: 'C', answer: 'Usar um arquivo .classpath' },
          { id: 4, prefix: 'D', answer: 'Usar a configuração de execução' },
          { id: 5, prefix: 'E', answer: 'Usar a configuração de depuração' },
        ],
        answer: 'A',
        justification: 'No Eclipse, o classpath é geralmente definido através das propriedades do projeto, arquivos .classpath, ou configurações de execução e depuração, não pela linha de comando.',
      },
      {
        id: 18,
        prefix: '18)',
        question: 'O que acontece se você tentar executar uma classe Java que depende de um arquivo JAR que não está no classpath?',
        options: [
          { id: 1, prefix: 'A', answer: 'A classe será executada normalmente' },
          { id: 2, prefix: 'B', answer: 'A JVM irá ignorar a dependência' },
          { id: 3, prefix: 'C', answer: 'A JVM lançará um ClassNotFoundException' },
          { id: 4, prefix: 'D', answer: 'A JVM lançará um FileNotFoundException' },
          { id: 5, prefix: 'E', answer: 'A JVM lançará um IOException' },
        ],
        answer: 'C',
        justification: 'Se uma classe Java depende de um arquivo JAR que não está no classpath, a JVM não conseguirá encontrar as classes necessárias e lançará um ClassNotFoundException.',
      },
    ],
  },
  {
    id: 3,
    title: 'Questões sobre Fechar Conexão com o Banco de Dados',
    questions: [
      {
        id: 1,
        prefix: '1)',
        question: 'Por que é importante fechar a conexão com o banco de dados em Java?',
        options: [
          { id: 1, prefix: 'A', answer: 'Para liberar memória' },
          { id: 2, prefix: 'B', answer: 'Para evitar vazamento de memória e recursos' },
          { id: 3, prefix: 'C', answer: 'Para aumentar a velocidade da aplicação' },
          { id: 4, prefix: 'D', answer: 'Para garantir a segurança dos dados' },
          { id: 5, prefix: 'E', answer: 'Para melhorar a legibilidade do código' },
        ],
        answer: 'B',
        justification: 'Fechar a conexão com o banco de dados é crucial para liberar recursos e evitar vazamentos de memória, garantindo que a aplicação não consuma recursos desnecessários.',
      },
      {
        id: 2,
        prefix: '2)',
        question: 'Qual método é usado para fechar uma conexão com o banco de dados em Java?',
        options: [
          { id: 1, prefix: 'A', answer: 'closeConnection()' },
          { id: 2, prefix: 'B', answer: 'disconnect()' },
          { id: 3, prefix: 'C', answer: 'close()' },
          { id: 4, prefix: 'D', answer: 'terminate()' },
          { id: 5, prefix: 'E', answer: 'end()' },
        ],
        answer: 'C',
        justification: 'O método close() da interface Connection é usado para fechar a conexão com o banco de dados.',
      },
      {
        id: 3,
        prefix: '3)',
        question: 'O que pode acontecer se você não fechar a conexão com o banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'A aplicação pode ficar mais rápida' },
          { id: 2, prefix: 'B', answer: 'A aplicação pode consumir mais recursos do sistema' },
          { id: 3, prefix: 'C', answer: 'A aplicação pode se tornar mais segura' },
          { id: 4, prefix: 'D', answer: 'A aplicação pode se tornar mais legível' },
          { id: 5, prefix: 'E', answer: 'A aplicação pode se tornar mais fácil de manter' },
        ],
        answer: 'B',
        justification: 'Não fechar a conexão pode levar ao consumo excessivo de recursos do sistema, como memória e conexões de banco de dados, resultando em possíveis falhas e degradação de desempenho.',
      },
      {
        id: 4,
        prefix: '4)',
        question: 'Além de Connection, quais outras interfaces devem ter seus recursos fechados após o uso?',
        options: [
          { id: 1, prefix: 'A', answer: 'Statement e ResultSet' },
          { id: 2, prefix: 'B', answer: 'PreparedStatement e CallableStatement' },
          { id: 3, prefix: 'C', answer: 'ResultSet e PreparedStatement' },
          { id: 4, prefix: 'D', answer: 'Todas as anteriores' },
          { id: 5, prefix: 'E', answer: 'Nenhuma das anteriores' },
        ],
        answer: 'D',
        justification: 'Tanto Statement, PreparedStatement, CallableStatement quanto ResultSet devem ser fechados após o uso para liberar recursos.',
      },
      {
        id: 5,
        prefix: '5)',
        question: 'Qual é a sequência correta para fechar os recursos de banco de dados em Java?',
        options: [
          { id: 1, prefix: 'A', answer: 'Fechar Connection primeiro, depois Statement e ResultSet' },
          { id: 2, prefix: 'B', answer: 'Fechar ResultSet primeiro, depois Statement e Connection' },
          { id: 3, prefix: 'C', answer: 'Fechar Statement primeiro, depois ResultSet e Connection' },
          { id: 4, prefix: 'D', answer: 'Fechar Connection primeiro, depois ResultSet e Statement' },
          { id: 5, prefix: 'E', answer: 'A ordem não importa' },
        ],
        answer: 'B',
        justification: 'A sequência correta é fechar ResultSet primeiro, seguido por Statement e, por último, Connection para garantir que todos os recursos sejam liberados corretamente.',
      },
      {
        id: 6,
        prefix: '6)',
        question: 'Qual exceção pode ser lançada ao tentar fechar uma conexão de banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'SQLException' },
          { id: 2, prefix: 'B', answer: 'IOException' },
          { id: 3, prefix: 'C', answer: 'NullPointerException' },
          { id: 4, prefix: 'D', answer: 'ClassNotFoundException' },
          { id: 5, prefix: 'E', answer: 'FileNotFoundException' },
        ],
        answer: 'A',
        justification: 'O método close() pode lançar uma SQLException se ocorrer um erro ao tentar fechar a conexão com o banco de dados.',
      },
    ],
  },
  {
    id: 4,
    title: 'Questões sobre as classes Connection, Statement, DriverManager, ResultSet, ResultSetMetaData, SQLException',
    questions: [
      {
        id: 1,
        prefix: '1)',
        question: 'Qual método da interface Connection é usado para criar um objeto Statement?',
        options: [
          { id: 1, prefix: 'A', answer: 'createStatement()' },
          { id: 2, prefix: 'B', answer: 'prepareStatement()' },
          { id: 3, prefix: 'C', answer: 'executeQuery()' },
          { id: 4, prefix: 'D', answer: 'executeUpdate()' },
          { id: 5, prefix: 'E', answer: 'getStatement()' },
        ],
        answer: 'A',
        justification: 'O método createStatement() da interface Connection é usado para criar um objeto Statement que pode ser usado para executar consultas SQL.',
      },
      {
        id: 2,
        prefix: '2)',
        question: 'Qual método da interface Statement é usado para executar uma consulta SQL que retorna um conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'execute()' },
          { id: 2, prefix: 'B', answer: 'executeUpdate()' },
          { id: 3, prefix: 'C', answer: 'executeQuery()' },
          { id: 4, prefix: 'D', answer: 'executeBatch()' },
          { id: 5, prefix: 'E', answer: 'executeStatement()' },
        ],
        answer: 'C',
        justification: 'O método executeQuery() é usado para executar consultas SQL que retornam um objeto ResultSet.',
      },
      {
        id: 3,
        prefix: '3)',
        question: 'Qual classe é usada para gerenciar um conjunto de drivers JDBC?',
        options: [
          { id: 1, prefix: 'A', answer: 'DriverManager' },
          { id: 2, prefix: 'B', answer: 'ConnectionManager' },
          { id: 3, prefix: 'C', answer: 'StatementManager' },
          { id: 4, prefix: 'D', answer: 'ResultSetManager' },
          { id: 5, prefix: 'E', answer: 'SQLManager' },
        ],
        answer: 'A',
        justification: 'A classe DriverManager gerencia um conjunto de drivers JDBC e é usada para estabelecer conexões com um banco de dados.',
      },
      {
        id: 4,
        prefix: '4)',
        question: 'Qual método da interface ResultSet é usado para mover o cursor para a próxima linha do conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'next()' },
          { id: 2, prefix: 'B', answer: 'previous()' },
          { id: 3, prefix: 'C', answer: 'first()' },
          { id: 4, prefix: 'D', answer: 'last()' },
          { id: 5, prefix: 'E', answer: 'move()' },
        ],
        answer: 'A',
        justification: 'O método next() move o cursor para a próxima linha do conjunto de resultados.',
      },
      {
        id: 5,
        prefix: '5)',
        question: 'Qual interface fornece informações sobre os tipos e propriedades das colunas em um objeto ResultSet?',
        options: [
          { id: 1, prefix: 'A', answer: 'ResultSetMetaData' },
          { id: 2, prefix: 'B', answer: 'ResultSetInfo' },
          { id: 3, prefix: 'C', answer: 'ResultSetDetails' },
          { id: 4, prefix: 'D', answer: 'ResultSetProperties' },
          { id: 5, prefix: 'E', answer: 'ResultSetColumns' },
        ],
        answer: 'A',
        justification: 'A interface ResultSetMetaData fornece informações sobre os tipos e propriedades das colunas em um objeto ResultSet.',
      },
      {
        id: 6,
        prefix: '6)',
        question: 'Qual exceção é lançada para indicar um erro de acesso ao banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'SQLException' },
          { id: 2, prefix: 'B', answer: 'IOException' },
          { id: 3, prefix: 'C', answer: 'DatabaseException' },
          { id: 4, prefix: 'D', answer: 'SQLAccessException' },
          { id: 5, prefix: 'E', answer: 'DataAccessException' },
        ],
        answer: 'A',
        justification: 'A exceção SQLException é lançada para indicar um erro de acesso ao banco de dados ou outros erros relacionados.',
      },
      {
        id: 7,
        prefix: '7)',
        question: 'Qual método da interface Connection é usado para iniciar uma transação?',
        options: [
          { id: 1, prefix: 'A', answer: 'beginTransaction()' },
          { id: 2, prefix: 'B', answer: 'startTransaction()' },
          { id: 3, prefix: 'C', answer: 'setAutoCommit(false)' },
          { id: 4, prefix: 'D', answer: 'commit()' },
          { id: 5, prefix: 'E', answer: 'rollback()' },
        ],
        answer: 'C',
        justification: 'O método setAutoCommit(false) é usado para desativar o modo de confirmação automática, iniciando assim uma transação.',
      },
      {
        id: 8,
        prefix: '8)',
        question: 'Qual método da interface Statement é usado para executar uma instrução SQL que não retorna um conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'execute()' },
          { id: 2, prefix: 'B', answer: 'executeUpdate()' },
          { id: 3, prefix: 'C', answer: 'executeQuery()' },
          { id: 4, prefix: 'D', answer: 'executeBatch()' },
          { id: 5, prefix: 'E', answer: 'executeStatement()' },
        ],
        answer: 'B',
        justification: 'O método executeUpdate() é usado para executar instruções SQL que não retornam um objeto ResultSet, como INSERT, UPDATE e DELETE.',
      },
      {
        id: 9,
        prefix: '9)',
        question: 'Qual método da classe DriverManager é usado para estabelecer uma conexão com um banco de dados?',
        options: [
          { id: 1, prefix: 'A', answer: 'getConnection()' },
          { id: 2, prefix: 'B', answer: 'connect()' },
          { id: 3, prefix: 'C', answer: 'createConnection()' },
          { id: 4, prefix: 'D', answer: 'openConnection()' },
          { id: 5, prefix: 'E', answer: 'startConnection()' },
        ],
        answer: 'A',
        justification: 'O método getConnection() da classe DriverManager é usado para estabelecer uma conexão com um banco de dados usando uma URL de conexão.',
      },
      {
        id: 10,
        prefix: '10)',
        question: 'Qual método da interface ResultSet é usado para fechar o conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'close()' },
          { id: 2, prefix: 'B', answer: 'end()' },
          { id: 3, prefix: 'C', answer: 'terminate()' },
          { id: 4, prefix: 'D', answer: 'finish()' },
          { id: 5, prefix: 'E', answer: 'shutdown()' },
        ],
        answer: 'A',
        justification: 'O método close() é usado para fechar o conjunto de resultados e liberar os recursos associados.',
      },
      {
        id: 11,
        prefix: '11)',
        question: 'Qual método da interface ResultSetMetaData é usado para obter o número de colunas em um conjunto de resultados?',
        options: [
          { id: 1, prefix: 'A', answer: 'getColumnCount()' },
          { id: 2, prefix: 'B', answer: 'getColumnNumber()' },
          { id: 3, prefix: 'C', answer: 'getColumnSize()' },
          { id: 4, prefix: 'D', answer: 'getColumnLength()' },
          { id: 5, prefix: 'E', answer: 'getColumnTotal()' },
        ],
        answer: 'A',
        justification: 'O método getColumnCount() retorna o número de colunas em um conjunto de resultados.',
      },
      {
        id: 12,
        prefix: '12)',
        question: 'Qual método da interface SQLException é usado para obter o código de erro SQLState?',
        options: [
          { id: 1, prefix: 'A', answer: 'getSQLState()' },
          { id: 2, prefix: 'B', answer: 'getErrorCode()' },
          { id: 3, prefix: 'C', answer: 'getStateCode()' },
          { id: 4, prefix: 'D', answer: 'getErrorState()' },
          { id: 5, prefix: 'E', answer: 'getSQLCode()' },
        ],
        answer: 'A',
        justification: 'O método getSQLState() retorna o código de erro SQLState associado à exceção.',
      },
    ],
  },
]